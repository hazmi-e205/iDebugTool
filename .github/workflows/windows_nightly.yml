name: Windows Nightly CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  QT_VERSION: 6.5.0
  QT_DIR: ${{ github.workspace }}/Qt
  QMAKE_DIR: ${{ github.workspace }}\Qt\Qt\6.5.0\mingw_64\bin
  QMAKE_FILENAME: \qmake.exe
  MAKE_DIR: ${{ github.workspace }}\Qt\Qt\Tools\mingw1120_64\bin
  MAKE_FILENAME: \mingw32-make.exe
  SOURCE_DIR: ${{ github.workspace }}
  MAKEFILE_DIR: ${{ github.workspace }}/Prj/Qt-windows_Release
  PROJECT_PATH: ${{ github.workspace }}/Prj/Qt-windows/iDebugTool.pro
  BUILD_DIR: ${{ github.workspace }}/Build/Qt-windows/bin
  BUILD_NAME: iDebugTool.exe
  PROJECT_NAME: iDebugTool
  COMPILER_NAME: mingw11.2.0
  PLATFORM_NAME: win64
  APP_VERSION: nightly

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Python check
      run: python -V

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'
        tools: 'tools_mingw90'
        dir: ${{ env.QT_DIR }}
        
    - name: Checkout Project
      uses: actions/checkout@v3
      with:
        lfs: 'true'
        submodules: 'recursive'
        
    - name: Checkout Dependencies
      run: |
        python ${{ env.SOURCE_DIR }}/Scripts/make.py --checkout
        
    - name: Apply Patches
      run: |
        python ${{ env.SOURCE_DIR }}/Scripts/make.py --patch
        
    - name: Generate Project by Premake
      run: |
        python ${{ env.SOURCE_DIR }}/Scripts/make.py --premake
        
    - name: Generate makefile by qmake
      working-directory: ${{ env.SOURCE_DIR }}
      run: |
        echo "${{ env.MAKE_DIR }}" >> $GITHUB_PATH
        mkdir ${{ env.MAKEFILE_DIR }}
        cd ${{ env.MAKEFILE_DIR }}
        ${{ env.QMAKE_DIR }}${{ env.QMAKE_FILENAME }} ${{ env.PROJECT_PATH }} -spec win32-g++ "CONFIG+=qtquickcompiler"
        
    - name: Build qmake
      working-directory: ${{ env.MAKEFILE_DIR }}
      run: |
        ${{ env.MAKE_DIR }}${{ env.MAKE_FILENAME }} -f ${{ env.MAKEFILE_DIR }}/Makefile qmake_all
        
    - name: Build Application
      working-directory: ${{ env.MAKEFILE_DIR }}
      run: |
        ${{ env.MAKE_DIR }}${{ env.MAKE_FILENAME }} -j8
        
    - name: Deploy Application
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        windeployqt ${{ env.BUILD_NAME }} --no-opengl-sw --no-translations --no-system-d3d-compiler
        
    - name: Archive Build
      working-directory: ${{ env.SOURCE_DIR }}
      run: |
        7z a ${{ env.PROJECT_NAME }}-${{ env.APP_VERSION }}-qt${{ env.QT_VERSION }}-${{ env.COMPILER_NAME }}-${{ env.PLATFORM_NAME }}.zip ${{ env.BUILD_DIR }}/* -r
              
    - name: Save Artifact
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.PROJECT_NAME }}-${{ env.APP_VERSION }}-qt${{ env.QT_VERSION }}-${{ env.COMPILER_NAME }}-${{ env.PLATFORM_NAME }}.zip
        path: ${{ env.SOURCE_DIR }}/${{ env.PROJECT_NAME }}-${{ env.APP_VERSION }}-qt${{ env.QT_VERSION }}-${{ env.COMPILER_NAME }}-${{ env.PLATFORM_NAME }}.zip
        





