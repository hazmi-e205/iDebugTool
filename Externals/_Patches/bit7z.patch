diff --git a/src/internal/csymlinkinstream.cpp b/src/internal/csymlinkinstream.cpp
index 2541327..c61252b 100644
--- a/src/internal/csymlinkinstream.cpp
+++ b/src/internal/csymlinkinstream.cpp
@@ -17,7 +17,7 @@ namespace bit7z {
 
 auto read_symlink_as_string( const fs::path& symlinkPath ) noexcept -> std::string {
     std::error_code error;
-    return fs::read_symlink( symlinkPath, error ).u8string();
+    return fs::read_symlink( symlinkPath, error ).string();
 }
 
 CSymlinkInStream::CSymlinkInStream( const fs::path& symlinkPath )
@@ -34,4 +34,4 @@ STDMETHODIMP CSymlinkInStream::Seek( Int64 offset, UInt32 seekOrigin, UInt64* ne
     return mSymlinkStream->Seek( offset, seekOrigin, newPosition );
 }
 
-} // namespace bit7z
\ No newline at end of file
+} // namespace bit7z
diff --git a/src/internal/fileextractcallback.cpp b/src/internal/fileextractcallback.cpp
index a34b81a..cede3ca 100644
--- a/src/internal/fileextractcallback.cpp
+++ b/src/internal/fileextractcallback.cpp
@@ -94,7 +94,7 @@ auto FileExtractCallback::getOutStream( uint32_t index, ISequentialOutStream** o
 #if defined( BIT7Z_USE_NATIVE_STRING )
             const auto& filePathString = filePath.native();
 #elif !defined( BIT7Z_USE_SYSTEM_CODEPAGE )
-            const auto filePathString = filePath.u8string();
+            const auto filePathString = filePath.string();
 #else
             const auto& nativePath = filePath.native();
             const auto filePathString = narrow( nativePath.c_str(), nativePath.size() );
@@ -141,4 +141,4 @@ auto FileExtractCallback::getOutStream( uint32_t index, ISequentialOutStream** o
     return S_OK;
 }
 
-} // namespace bit7z
\ No newline at end of file
+} // namespace bit7z
diff --git a/src/internal/stringutil.hpp b/src/internal/stringutil.hpp
index 2ac190b..5a21215 100644
--- a/src/internal/stringutil.hpp
+++ b/src/internal/stringutil.hpp
@@ -40,7 +40,7 @@ inline auto path_to_tstring( const fs::path& path ) -> tstring {
     const auto& native_path = path.native();
     return narrow( native_path.c_str(), native_path.size() );
 #else
-    return path.u8string();
+    return path.string();
 #endif
 }
 
